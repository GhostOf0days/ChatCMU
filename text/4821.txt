This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.This poster describes efforts to increase the speed and confidence of the component selection process in software systems.This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.Presentation on research to identify dynamic dependencies that result from the way modern systems are composedPoster on research into dynamic dependencies that arise from the way modern systems are composedDesigning Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. This poster describes a project that aims to extend AADL to better address security in the architectureThis project aims to extend AADL to better address security in the architectureIn this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery. In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.In the past decade, researchers have devised many methods to support and codify architecture design.If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.This paper describes how software engineers can manage technical debt based on models of their economic impact.This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).Presentation for the 2008 SATURN workshop held in PittsburghThis report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. This paper outlines experiences with using economic criteria to make architecture design decisions.This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. This report presents a description of architecture-centric system development. This paper presents a concrete example of an architecturally-motivated reengineering task. This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.This paper presents an approach to capturing and assessing software architectures for evolution and reuse. This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.Visit the SEI Blogs to see other posts by Rick Kazman.Carnegie Mellon University Software Engineering Institute 4500 Fifth Avenue Pittsburgh, PA 15213-2612 412-268-5800©2023 Carnegie Mellon University✕AboutOur WorkPublicationsNews and EventsEducation and OutreachCareersAbout LeadershipDivisionsWork with UsCollaboration with CMUHistory of Innovation at the SEI Our Work AgileArtificial Intelligence EngineeringCloud ComputingCyber Workforce DevelopmentCybersecurity Center DevelopmentCybersecurity EngineeringDevSecOpsAll TopicsAll Projects Publications Annual ReviewsBlogDigital LibraryPodcast SeriesSoftware and ToolsTechnical PapersVulnerability Notes DatabaseWebinar Series News and Events NewsEventsSEI Bulletin Education and Outreach CoursesCredentialsCurriculaLicense SEI Materials Careers Job OpeningsDiversity, Equity, and InclusionInternship Opportunities 
SEI

Publications
Digital LibraryRick Kazman




A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read








Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more








Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more








Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read








Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read








Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read








Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read








A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read








Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read








Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read








Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read








SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch








Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read








Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read








Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read








Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more








Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read








Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read








Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read








Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch








Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read








Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more








Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read








Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read








Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read








Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read








A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read








Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read








An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read








Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read








Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read








A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read








Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read








Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read








Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read








Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read








Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read








Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read








A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read








A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read








Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read








Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read








Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read








Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read








SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read








Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read








Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read








Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read








The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read








Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read








Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read








Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read








Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read








Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read








Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read








Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read








A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read








Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read








Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read








Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read








SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read








Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read








Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read








Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read








Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read








Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read








ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read








Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read








Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read








Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read








Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read








The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read








View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read








The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read








Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read








Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read








Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read








An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read








Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read








Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read








Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read








Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read








Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read








An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read








An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read








Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read




Office Locations


Additional Sites Directory


Legal


Privacy Notice


CMU Ethics Hotline


www.sei.cmu.edu

 ✕About LeadershipDivisionsWork with UsCollaboration with CMUHistory of Innovation at the SEI Our Work AgileArtificial Intelligence EngineeringCloud ComputingCyber Workforce DevelopmentCybersecurity Center DevelopmentCybersecurity EngineeringDevSecOpsAll TopicsAll Projects Publications Annual ReviewsBlogDigital LibraryPodcast SeriesSoftware and ToolsTechnical PapersVulnerability Notes DatabaseWebinar Series News and Events NewsEventsSEI Bulletin Education and Outreach CoursesCredentialsCurriculaLicense SEI Materials Careers Job OpeningsDiversity, Equity, and InclusionInternship Opportunities  



Carnegie Mellon University 





















Software Engineering Institute




About LeadershipDivisionsWork with UsCollaboration with CMUHistory of Innovation at the SEI Our Work AgileArtificial Intelligence EngineeringCloud ComputingCyber Workforce DevelopmentCybersecurity Center DevelopmentCybersecurity EngineeringDevSecOpsAll TopicsAll Projects Publications Annual ReviewsBlogDigital LibraryPodcast SeriesSoftware and ToolsTechnical PapersVulnerability Notes DatabaseWebinar Series News and Events NewsEventsSEI Bulletin Education and Outreach CoursesCredentialsCurriculaLicense SEI Materials Careers Job OpeningsDiversity, Equity, and InclusionInternship Opportunities 








SEI


Publications

Digital Library
Rick Kazman






    


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    


    







Report a Vulnerability to CERT/CC
Subscribe to SEI Bulletin
Request Permission to Use SEI Materials







Carnegie Mellon University Software Engineering Institute 4500 Fifth Avenue Pittsburgh, PA 15213-2612 412-268-5800











Contact Us







Office Locations



Additional Sites Directory



Legal



Privacy Notice



CMU Ethics Hotline



www.sei.cmu.edu








©2023 Carnegie Mellon University






Carnegie Mellon University 


















Carnegie Mellon University 
























Software Engineering Institute




About LeadershipDivisionsWork with UsCollaboration with CMUHistory of Innovation at the SEI Our Work AgileArtificial Intelligence EngineeringCloud ComputingCyber Workforce DevelopmentCybersecurity Center DevelopmentCybersecurity EngineeringDevSecOpsAll TopicsAll Projects Publications Annual ReviewsBlogDigital LibraryPodcast SeriesSoftware and ToolsTechnical PapersVulnerability Notes DatabaseWebinar Series News and Events NewsEventsSEI Bulletin Education and Outreach CoursesCredentialsCurriculaLicense SEI Materials Careers Job OpeningsDiversity, Equity, and InclusionInternship Opportunities 




Software Engineering Institute


About LeadershipDivisionsWork with UsCollaboration with CMUHistory of Innovation at the SEI Our Work AgileArtificial Intelligence EngineeringCloud ComputingCyber Workforce DevelopmentCybersecurity Center DevelopmentCybersecurity EngineeringDevSecOpsAll TopicsAll Projects Publications Annual ReviewsBlogDigital LibraryPodcast SeriesSoftware and ToolsTechnical PapersVulnerability Notes DatabaseWebinar Series News and Events NewsEventsSEI Bulletin Education and Outreach CoursesCredentialsCurriculaLicense SEI Materials Careers Job OpeningsDiversity, Equity, and InclusionInternship Opportunities 

 LeadershipDivisionsWork with UsCollaboration with CMUHistory of Innovation at the SEI  AgileArtificial Intelligence EngineeringCloud ComputingCyber Workforce DevelopmentCybersecurity Center DevelopmentCybersecurity EngineeringDevSecOpsAll TopicsAll Projects  Annual ReviewsBlogDigital LibraryPodcast SeriesSoftware and ToolsTechnical PapersVulnerability Notes DatabaseWebinar Series  NewsEventsSEI Bulletin  CoursesCredentialsCurriculaLicense SEI Materials  Job OpeningsDiversity, Equity, and InclusionInternship Opportunities 


SEI


Publications

Digital Library
Rick Kazman





    


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    


    



    


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    


       


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    


     


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    


   


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    


 


    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    



    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






    
    





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






       





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






     





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






   





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






 





Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS











Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS








Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS






Rick Kazman
Software Engineering Institute
Publications by Rick Kazman







A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read









Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more









Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more









Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read









Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read









Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read









Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read









A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read









Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read









Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read









Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read









SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch









Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read









Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read









Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read









Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more









Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read









Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read









Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read









Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch









Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read









Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more









Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read









Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read









Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read









Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read









A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read









Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read









An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read









Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read









Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read









A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read









Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read









Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read









Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read









Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read









Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read









Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read









A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read









A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read









Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read









Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read









Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read









Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read









SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read









Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read









Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read









Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read









The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read









Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read









Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read









Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read









Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read









Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read









Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read









Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read









Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read









Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read









SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read









Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read









Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read









Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read









Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read









Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read









ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read









Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read









Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read









Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read









Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read









The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read









View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read









The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read









Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read









Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read









Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read









An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read









Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read









Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read









Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read









Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read









Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read









An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read









An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read









Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read














Contact


SEI Blogs



Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS



Rick Kazman
Software Engineering Institute
Publications by Rick Kazman




A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read





A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read


A Holistic View of Architecture Definition, Evolution, and Analysis
August 24, 2023 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report focuses on performing architectural decisions and architectural analysis, spanning multiple quality attributes, in a sustainable and ongoing way.
read




Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more





Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more


Software Architecture Patterns for Deployability 
November 15, 2022 • Podcast
Rick Kazman
Rick Kazman, an SEI visiting scientist and coauthor of Software Architecture in Practice, talks with principal researcher Suzanne Miller about using patterns for software deployability. 
learn more




Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more





Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more


Software Architecture Patterns for Robustness 
September 15, 2022 • Podcast
Rick Kazman
Rick Kazman discusses software architecture patterns and the effect that certain architectural patterns have on quality attributes, such as availability and robustness. 
learn more




Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read





Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read


Extensibility
April 06, 2022 • Technical Report
Rick KazmanSebastián EcheverríaJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for extensibility.
read




Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read





Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read


Robustness
March 16, 2022 • Technical Report
Rick KazmanPhilip BiancoSebastián Echeverría
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for robustness.
read




Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read





Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read


Software Architecture in Practice, 4th Edition
August 03, 2021 • Book
Len BassPaul C. ClementsRick Kazman
Software Architecture in Practice, 4th Edition, explains what software architecture is, why it's important, and how to design, analyze, evolve, and manage it.
read




Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read





Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read


Maintainability
December 01, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for maintainability. 
read




A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read





A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read


A Playbook for Early Architecture Analysis
November 13, 2020 • Presentation
John KleinPhilip BiancoRick Kazman
This talk describes a playbook to analyze early architecture artifacts' support for development-time quality attributes that affect long-term system success.
read




Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read





Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read


Integrability
February 07, 2020 • Technical Report
Rick KazmanPhilip BiancoJames Ivers
This report summarizes how to systematically analyze a software architecture with respect to a quality attribute requirement for integrability.
read




Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read





Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read


Rapid Software Composition by Assessing Untrusted Components
October 23, 2018 • Poster
Rick Kazman
This poster describes efforts to increase the speed and confidence of the component selection process in software systems.
read




Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read





Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read


Predicting Security Flaws through Architectural Flaws
October 23, 2018 • Poster
Robert SchielaRick Kazman
This poster describes efforts toward using automated architecture analysis to identify, prevent, and mitigate security flaws in code.
read




SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch





SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch


SEI Cyber Minute: Why Use Dynamic Design Analysis? 
February 23, 2018 • Video
Rick Kazman
By considering dynamic information in conjunction with static information, we can precisely locate such design flaws, and determine the root causes of bugs more quickly.
watch




Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read





Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read


Dynamic Design Analysis
October 30, 2017 • Presentation
Rick Kazman
Presentation on research to identify dynamic dependencies that result from the way modern systems are composed
read




Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read





Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read


Dynamic Design Analysis
October 30, 2017 • Poster
Rick Kazman
Poster on research into dynamic dependencies that arise from the way modern systems are composed
read




Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read





Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read


Designing Software Architectures: A Practical Approach
May 13, 2016 • Book
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Rick Kazman
Designing Software Architectures will teach you how to design any software architecture in a systematic, predictable, repeatable, and cost-effective way.
read




Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more





Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more


Identifying the Architectural Roots of Vulnerabilities
February 04, 2016 • Podcast
Rick KazmanCarol Woody
In this podcast, Rick Kazman and Carol Woody discuss an approach for identifying architecture debt in a large-scale industrial software project by modeling software architecture as design rule spaces.
learn more




Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read





Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read


Extending AADL for Security Design Assurance of Cyber-Physical Systems 
December 16, 2015 • Technical Report
Robert J. EllisonAllen D. HouseholderJohn J. Hudak
This report demonstrates the viability and limitations of using the Architecture Analysis and Design Language (AADL) through an extended example that allows for specifying and analyzing the security properties of an automotive electronics system. 
read




Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read





Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read


Extending AADL for Security Design Assurance of the Internet of Things Poster (SEI 2015 Research Review)
October 22, 2015 • Poster
Rick KazmanCarol Woody
This poster describes a project that aims to extend AADL to better address security in the architecture
read




Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read





Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read


Extending AADL  for Security Design Assurance of the Internet of Things
October 16, 2015 • Presentation
Carol WoodyRick Kazman
This project aims to extend AADL to better address security in the architecture
read




Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch





Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch


Approaching Security from an "Architecture First" Perspective
May 05, 2015 • Webinar
Rick Kazman
In this talk we report on three case studies of real-world projects—two industrial and one open-source—where we attempted to measure the consequences of various architectural approaches to security. 
watch




Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read





Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read


Toward Design Decisions to Enable Deployability: Empirical Study of Three Projects Reaching for the Continuous Delivery Holy Grail
June 23, 2014 • Conference Paper
Stephany BellomoNeil ErnstRobert Nord
This paper summarizes three project teams' deployability goals and the architectural decisions they made to enable deployability while practicing continuous delivery.
read




Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more





Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more


Security Pattern Assurance through Roundtrip Engineering 
February 13, 2014 • Podcast
Rick KazmanSuzanne Miller
 In this podcast, Rick Kazman discusses these challenges and a solution he has developed for achieving system security qualities through use of patterns. 
learn more




Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read





Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read


Understanding Patterns for System-of-Systems Integration
December 17, 2013 • Technical Report
Rick KazmanClaus Nielsen (No Affiliation)Klaus Schmid
This report discusses how a software architect can address the system-of-systems integration challenge from an architectural perspective.
read




Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read





Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read


Understanding Patterns for System of Systems Integration
August 08, 2013 • Conference Paper
Rick KazmanKlaus Schmid (University of Hildesheim)Claus Nielsen (Aarhus University)
This paper develops a way to characterize system-of-systems (SoS) integration patterns and highlights important issues that a SoS architect must consider.
read




Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read





Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read


Results of SEI Line-Funded Exploratory New Starts Projects: FY 2012
July 01, 2013 • Technical Report
Bjorn AnderssonLori FlynnDavid P. Gluch
This report describes line-funded exploratory new starts (LENS) projects that were conducted during fiscal year 2012 (October 2011 through September 2012).
read




Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read





Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read


Common Software Platforms in System-of-Systems Architectures: The State of the Practice
June 06, 2013 • White Paper
John KleinSholom G. CohenRick Kazman
System-of-systems (SoS) architectures based on common software platforms have been commercially successful, but progress on creating and adopting them has been slow. This study aimed to understand technical issues for their development and adoption.
read




A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read





A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read


A Principled Way to Use Frameworks in Architecture Design
November 30, 2012 • Article
Humberto Cervantes (Universidad Autonoma Metropolitana–Iztapalapa)Perla Velasco-Elizondo (Autonomous University of Zacatecas)Rick Kazman
In the past decade, researchers have devised many methods to support and codify architecture design.
read




Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read





Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read


Software Architecture in Practice, 3rd Edition
September 25, 2012 • Book
Len BassPaul C. ClementsRick Kazman
If you design, develop, or manage large software systems (or plan to do so), you will find "Software Architecture in Practice, Third Edition" to be a valuable resource for getting up to speed on the state of the art.
read




An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read





An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read


An Early Look at Defining Variability Requirements for System-of-Systems Platforms
September 25, 2012 • Conference Paper
John KleinGary ChastekSholom G. Cohen
This paper describes the development of a method for analyzing decisions about requirements for common platforms for systems of systems to enable controlled evolution. 
read




Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read





Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read


Results of SEI Line-Funded Exploratory New Starts Projects
August 01, 2012 • Technical Report
Len BassRick KazmanEdwin J. Morris
This report describes the line-funded exploratory new starts (LENS) projects that were undertaken during fiscal year 2011. For each project, the report presents a brief description and a recounting of the research that was done, as well as a synopsis of the results of the project. 
read




Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read





Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read


Panel Discussion: 20 Years of Architecture, Rick Kazman
May 10, 2012 • Presentation
Rick Kazman
Rick Kazman's's slides from the panel discussion on 20 Years of Architecture at the SATURN 2012 conference, May 7-11, 2012, St. Petersburg, FL.
read




A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read





A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read


A Mashup of Techniques to Create Reference Architectures
May 08, 2012 • Presentation
Rick KazmanJohn McGregor
This presentation, given at the Architecture and Process track at SATURN 2012 on May 7-11, 2012, in St Petersburg, FL, discusses existing techniques that can help organize the inputs required to create a robust reference architecture.
read




Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read





Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read


Evaluating a Partial Architecture in a ULS Context
May 13, 2011 • Presentation
Len BassJames IversRick Kazman
This presentation from SATURN 2011 discusses the application of architectural principles to analyzing an architectural landscape.
read




Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read





Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read


Architecture Evaluation without an Architecture: Experience with the Smart Grid
April 30, 2011 • White Paper
Rick KazmanLen BassJames Ivers
This paper describes an analysis of some of the challenges facing one portion of the Electrical Smart Grid in the United States - residential Demand Response (DR) systems.
read




Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read





Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read


Managing Technical Debt in Software-Reliant Systems
November 08, 2010 • Conference Paper
Nanette BrownRobert NordIpek Ozkaya
This paper describes how software engineers can manage technical debt based on models of their economic impact.
read




Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read





Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read


Edge Enabled Systems
May 19, 2010 • White Paper
Zacharie Hall  (Aberdeen Proving Ground)Rick KazmanDaniel Plakosh
This paper describes the characteristics of edge systems and the edge organizations in which these systems operate, and make initial recommendations about how such systems and organizations can be created to serve the needs of users at the edge.
read




Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read





Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read


Realizing and Refining Architectural Tactics: Availability
August 01, 2009 • Technical Report
James Scott (Boeing Company)Rick Kazman
Tactics are fundamental elements of software architecture that an architect employs to meet a system's quality requirements. This report describes an updated set of tactics that enable the architect to build availability into a system.
read




Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read





Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read


Experience with the Architecture Improvement Workshop (SATURN 2009)
May 07, 2009 • Presentation
Lawrence G. JonesRick Kazman
Lawrence G. Jones and Rick Kazman describe the Architecture Improvement Workshop (AIW) and discuss how it was used to support the evolution of the Space Surveillance Network Analysis Model (SSNAM). System.
read




A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read





A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read


A Framework for Making Architectural Decisions in a Business Context (SATURN 2009)
April 20, 2009 • Presentation
Jeromy CarriereRick KazmanIpek Ozkaya
Presentation given at SATURN 2009, which was held in Pittsburgh, PA in May 2009.
read




A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read





A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read


A Workshop on Architecture Competence
April 01, 2009 • Technical Note
Len BassPaul C. ClementsRick Kazman
This report summarizes a June 2008 architecture competence workshop where practitioners discussed key issues in assessing architecture competence in organizations.
read




Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read





Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read


Results of SEI Independent Research and Development Projects (FY 2008)
December 01, 2008 • Technical Report
Dionisio de NizGabriel MorenoRobert Nord
This report describes the independent research and development (IRAD) projects that were conducted during fiscal year 2008 (October 2007 through September 2008).
read




Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read





Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read


Current SAT Work in Architecture Evolution (SATURN 2008)
April 28, 2008 • Presentation
Rick Kazman
Presentation for the 2008 SATURN workshop held in Pittsburgh
read




Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read





Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read


Models for Evaluating and Improving Architecture Competence
March 01, 2008 • Technical Report
Len BassPaul C. ClementsRick Kazman
This report outlines the concepts of software architecture competence and describes four models for explaining, measuring, and improving the architecture competence of an individual or a software-producing organization. 
read




Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read





Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read


Classifying Architectural Elements as a Foundation for Mechanism Matching
November 01, 2007 • White Paper
Len BassPaul C. ClementsRick Kazman
This paper presents a set of well known but informally described software architectural elements used in system composition, and taxonomizes them under a basic set of characteristic features.
read




SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read





SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read


SAAM: A Method for Analyzing the Properties of Software Architectures
May 01, 2007 • White Paper
Gregory AbowdLen BassRick Kazman
This paper describes three perspectives by which we can understand the description of a software architecture and proposes a five-step method for analyzing software architectures called SAAM (Software Architecture Analysis Method).
read




Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read





Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read


Quality-Attribute-Based Economic Valuation of Architectural Patterns
May 01, 2007 • Technical Report
Ipek OzkayaRick KazmanMark H. Klein
This report shows how an analysis of the options embodied within architectural patterns allows a software and system architect or manager to make reasoned choices about the future value of design decisions.
read




Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read





Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read


Ultra-Large-Scale Systems: The Software Challenge of the Future
June 01, 2006 • Book
Peter H. FeilerKevin Sullivan (University of Virginia)Kurt C. Wallnau
Ultra-Large-Scale Systems: The Software Challenge of the Future is the product of a 12-month study of ultra-large-scale (ULS) systems software. 
read




Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read





Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read


Architecture Risk Reduction Activities (SATURN 2006)
April 25, 2006 • Presentation
Rick Kazman
Presentation from the SEI Software Architecture Technology User Network (SATURN) Workshop, held between April 25-26, 2006.
read




The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read





The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read


The Duties, Skills, and Knowledge of Software Architects
January 09, 2006 • Conference Paper
Paul C. ClementsRick KazmanMark H. Klein
This paper focuses on the human aspects of architecting software-in particular, the duties, skills, and knowledge of software architects. 
read




Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read





Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read


Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY2005)
December 01, 2005 • Technical Report
Rosann W. CollinsRick KazmanRichard C. Linger (Oak Ridge National Laboratory)
This report describes the IR&D projects that were conducted during fiscal year 2005 (October 2004 through September 2005). In addition, this report provides information on what the SEI has learned in its role as a technology scout for developments over the past year in the field of software engineering.
read




Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read





Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read


Categorizing Business Goals for Software Architectures
December 01, 2005 • Technical Report
Rick KazmanLen Bass
This report provides a categorization of possible business goals for software-intensive systems, so that individuals have some guidance in the elicitation, expression, and documentation of business goals.
read




Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read





Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read


Discovering Architectures from Running Systems: Lessons Learned
December 01, 2004 • Technical Report
Hong YanJonathan AldrichDavid Garlan
This report describes a technique that uses automatically generated runtime observations of an executing system to construct an architectural view of the system. 
read




Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read





Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read


Results of SEI Independent Research and Development Projects and Report on Emerging Technologies and Technology Trends (FY 2004)
October 01, 2004 • Technical Report
John K. BergeyEdwin J. MorrisJeannine Siviy
This report describes the IR&D projects that were conducted during fiscal year 2004 (October 2003 through September 2004). 
read




Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read





Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read


Integrating Software-Architecture-Centric Methods into the Rational Unified Process
July 01, 2004 • Technical Report
Rick KazmanPhilippe KruchtenRobert Nord
This report presents a summary of the RUP (Rational Unified Process) and examines the potential uses of the SEI's architecture-centric methods.
read




Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read





Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read


Integrating the Architecture Tradeoff Analysis Method (ATAM) with the Cost Benefit Analysis Method (CBAM)
December 01, 2003 • Technical Note
Robert NordMario R. BarbacciPaul C. Clements
This technical note reports on a proposal to integrate the SEI ATAM (Architecture Tradeoff Analysis Method) and the CBAM (Cost Benefit Analysis Method).
read




Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read





Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read


Architecture Reconstruction Guidelines, Third Edition
November 01, 2003 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read




A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read





A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read


A Life-Cycle View of Architecture Analysis and Design Methods
September 01, 2003 • Technical Note
Rick KazmanRobert NordMark H. Klein
This report examines the architecture-centric analysis and design methods that were created at the SEI between 1993 and 2003.
read




Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read





Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read


Architecture, Design, Implementation
May 01, 2003 • White Paper
Rick Kazman
Architecture, design, and implementation are used informally in partitioning software specifications into three coarse strata of abstraction. These strata are not well-defined in either research or practice, causing miscommunication and needless debate.
read




Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read





Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read


Software Architecture in Practice, 2nd Edition
April 09, 2003 • Book
Len BassPaul C. ClementsRick Kazman
This book provides an easily accessible overview of software architecture. Anyone requiring a comprehensive overview of the software architecture field will benefit from this book. 
read




Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read





Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read


Quantifying the Value of Architecture Design Decisions: Lessons from the Field
January 01, 2003 • White Paper
Jai AsundiRick KazmanMark H. Klein
This paper outlines experiences with using economic criteria to make architecture design decisions.
read




SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read





SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read


SEI Independent Research and Development Projects
October 01, 2002 • Technical Report
Steve CrossKurt C. WallnauEileen C. Forrester
This report describes the IR&D projects that were conducted during fiscal year 2002 (October 2001 through September 2002).
read




Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read





Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read


Assessing the Economic Impacts of Architectural Decisions
September 30, 2002 • Presentation
Rick Kazman
The CBAM (Cost Benefit Analysis Method) extends the ATAM framework to elicit and model costs, benefits, and uncertainty.

read




Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read





Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read


Making Architecture Design Decisions: An Economic Approach
September 01, 2002 • Technical Report
Rick KazmanJai AsundiMark H. Klein
This report describes the improvements to the CBAM (Cost Benefit Analysis Method) and provides a pilot case study conducted with NASA.
read




Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read





Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read


Using Economic Considerations to Choose Among Architecture Design Alternatives
December 01, 2001 • Technical Report
Jai AsundiRick KazmanMark H. Klein
The SEI developed the CBAM (Cost Benefit Analysis Method), which incorporates the costs and benefits of architectural design decisions and provides an effective means of making such decisions. This paper reports on the application of this method to a real world case study.
read




Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read





Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read


Evaluating Software Architectures: Methods and Case Studies
October 22, 2001 • Book
Paul C. ClementsRick KazmanMark H. Klein
This book is a comprehensive guide to software architecture evaluation, describing specific methods that can quickly and inexpensively mitigate enormous risk in software projects.
read




Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read





Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read


Architecture Reconstruction Guidelines
August 01, 2001 • Technical Report
Rick KazmanLiam O'BrienChris Verhoef
This report describes the process of architecture reconstruction using the Dali architecture reconstruction workbench. 
read




ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read





ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read


ATAM: Method for Architecture Evaluation
August 01, 2000 • Technical Report
Rick KazmanMark H. KleinPaul C. Clements
This report presents technical and organizational foundations for performing architectural analysis, and presents the SEI's ATAM, a technique for analyzing software architectures.
read




Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read





Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read


Attribute-Based Architectural Styles
October 01, 1999 • Technical Report
Mark H. KleinRick Kazman
This report establishes a common format for documenting  ABASs in the hope that they will become the foundation for anyone who is doing system design and analysis.
read




Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read





Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read


Software Architecture Evaluation with ATAM in the DoD System Acquisition Context
September 01, 1999 • Technical Note
John K. BergeyMatt FisherLawrence G. Jones
This report explains the basics of software architecture and software architecture evaluation in a system acquisition context. 
read




Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read





Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read


Architecture-Based Development
April 01, 1999 • Technical Report
Len BassRick Kazman
This report presents a description of architecture-centric system development. 
read




Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read





Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read


Software Architectural Transformation
January 01, 1999 • White Paper
Rick KazmanSteve Woods
This paper presents a concrete example of an architecturally-motivated reengineering task. 
read




The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read





The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read


The Architecture Tradeoff Analysis Method
July 01, 1998 • Technical Report
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in the architectures of software-intensive systems.
read




View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read





View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read


View Extraction and View Fusion in Architectural Understanding
June 01, 1998 • White Paper
Jeromy CarriereRick Kazman
This paper presents a workbench for architectural extraction called Dali, and shows how Dali supports flexible extraction and fusion of architectural information. Its use is described through two extended examples of architectural reconstruction.
read




The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read





The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read


The Architecture Tradeoff Analysis Method
April 01, 1998 • White Paper
Rick KazmanMark H. KleinMario R. Barbacci
This paper presents the Architecture Tradeoff Analysis Method (ATAM), a structured technique for understanding the tradeoffs inherent in design. 
read




Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read





Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read


Assessment of CORBA and POSIX Designs for FAA En Route Resectorization
April 01, 1998 • Special Report
B. Craig  MeyersDaniel PlakoshPatrick R. Place
This report addresses the use of different technologies and an architectural tradeoff approach on a typical En Route system problem. 
read




Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read





Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read


Assessing Architectural Complexity
March 01, 1998 • White Paper
Marcus Burth (University of Mannheim)Rick Kazman
This paper describes a system, called IAPR, that aids in architectural exploration and measurement by attempting to match patterns to an architecture.
read




Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read





Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read


Requirements for Integrating Software Architecture
January 01, 1998 • White Paper
Jeromy CarriereRick KazmanSteve Woods
This paper discusses the requirements and a generic framework for the integration of architectural and code-based reengineering tools.
read




An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read





An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read


An Approach to Software Architecture Analysis for Evolution and Reusability
November 01, 1997 • White Paper
Sonia Bot (Nortel)Kalai  Kalaichelvan (Nortel)Rick Kazman
This paper presents an approach to capturing and assessing software architectures for evolution and reuse. 
read




Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read





Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read


Assessing Design Quality From a Software Architectural Perspective
October 01, 1997 • White Paper
Jeromy CarriereRick Kazman
This whitepaper argues that good object oriented designs accrue from attention to both the design of objects and classes and to the architectural framework which defines how instances of those classes interact.
read




Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read





Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read


Playing Detective: Reconstructing Software Architecture from Available Evidence
October 01, 1997 • Technical Report
Rick KazmanJeromy Carriere
This paper presents Dali, an open, lightweight workbench that aids an analyst in extracting, manipulating, and interpreting architectural information. 
read




Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read





Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read


Recommended Best Industrial Practice for Software Architecture Evaluation
January 13, 1997 • Technical Report
Gregory AbowdLen BassPaul C. Clements
This report details the results of two workshops on software architecture evaluation, held at the SEI in 1996. 
read




Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read





Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read


Scenario-Based Analysis of Software Architecture
November 01, 1996 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents an experiential case study illustrating the methodological use of scenarios to gain architecture-level understanding and predictive insight into large, real-world systems in various domains.
read




Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read





Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read


Tool Support for Architecture Analysis and Design
January 01, 1996 • White Paper
Rick Kazman
This position paper first presents a set of requirements that an ideal tool for architectural design and analysis, and then presents a tool—called SAAMtool—that meets most, but not all, of these requirements.
read




An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read





An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read


An Architectural Analysis Case Study: Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs). 
read




An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read





An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read


An Architectural Analysis Case Study:Internet Information Systems
April 01, 1995 • White Paper
Gregory AbowdLen BassPaul C. Clements
This paper presents a method for analyzing systems for nonfunctional qualities from the perspective of their software architecture and applies this method to the field of Internet information systems (IISs).
read




Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read





Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read


Toward Deriving Software Architectures from Quality Attributes
August 01, 1994 • Technical Report
Rick KazmanLen Bass
This report presents a method for deriving software architectures from a consideration of the non-functional qualities of a system.
read







Contact

SEI Blogs

Visit the SEI Blogs to see other posts by Rick Kazman.
VIEW POSTS


Report a Vulnerability to CERT/CC
Subscribe to SEI Bulletin
Request Permission to Use SEI Materials


Report a Vulnerability to CERT/CC
Subscribe to SEI Bulletin
Request Permission to Use SEI Materials
Report a Vulnerability to CERT/CCSubscribe to SEI BulletinRequest Permission to Use SEI Materials


Carnegie Mellon University Software Engineering Institute 4500 Fifth Avenue Pittsburgh, PA 15213-2612 412-268-5800











Contact Us







Office Locations



Additional Sites Directory



Legal



Privacy Notice



CMU Ethics Hotline



www.sei.cmu.edu








©2023 Carnegie Mellon University




Carnegie Mellon University Software Engineering Institute 4500 Fifth Avenue Pittsburgh, PA 15213-2612 412-268-5800











Contact Us


Carnegie Mellon University Software Engineering Institute 4500 Fifth Avenue Pittsburgh, PA 15213-2612 412-268-5800









Contact Us





Office Locations



Additional Sites Directory



Legal



Privacy Notice



CMU Ethics Hotline



www.sei.cmu.edu









Office Locations



Additional Sites Directory



Legal



Privacy Notice



CMU Ethics Hotline



www.sei.cmu.edu







Office Locations



Additional Sites Directory



Legal



Privacy Notice



CMU Ethics Hotline



www.sei.cmu.edu





©2023 Carnegie Mellon University


©2023 Carnegie Mellon University
